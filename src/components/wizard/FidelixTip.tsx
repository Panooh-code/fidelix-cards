import { Cat } from "lucide-react";
import { useWizard } from "./WizardContext";

interface FidelixTipProps {
  questionNumber: number;
}

const getTipBySegmentAndQuestion = (segment: string, question: number): string => {
  const tipsBySegment: Record<string, Record<number, string>> = {
    alimentacao: {
      1: "Nome claro atrai mais clientes",
      2: "Alimenta√ß√£o tem regras espec√≠ficas",
      3: "Logo deve ser leg√≠vel em pequeno",
      4: "WhatsApp √© essencial para delivery",
      5: "Endere√ßo facilita entregas",
      6: "Instagram √© ideal para fotos de comida",
      7: "Use cores que despertem apetite",
      8: "Fundo claro destaca melhor",
      9: "Texturas remetem ao alimento",
      10: "Estrela √© cl√°ssica para pontos",
      11: "5-10 selos para ticket m√©dio",
      12: "Controle evita desperd√≠cio",
      13: "Ex: 'Ganhe um a√ßa√≠ gr√°tis'",
      14: "Ex: 'A cada R$25 um selo'",
      15: "30 dias motiva uso r√°pido"
    },
    beleza: {
      1: "Nome elegante transmite qualidade",
      2: "Beleza foca em experi√™ncia",
      3: "Logo deve ser sofisticada",
      4: "WhatsApp para agendamentos",
      5: "Endere√ßo gera confian√ßa",
      6: "Instagram mostra trabalhos",
      7: "Cores elegantes e femininas",
      8: "Tons suaves s√£o ideais",
      9: "Padr√µes delicados",
      10: "Cora√ß√£o combina com beleza",
      11: "8-12 selos para servi√ßos",
      12: "Limite controla agenda",
      13: "Ex: 'Unha decorada gr√°tis'",
      14: "Ex: 'A cada servi√ßo um selo'",
      15: "60 dias para procedimentos"
    },
    tecnologia: {
      1: "Nome tech deve ser moderno",
      2: "Tecnologia √© inova√ß√£o",
      3: "Logo minimalista funciona",
      4: "WhatsApp Business √© melhor",
      5: "Endere√ßo para confian√ßa",
      6: "LinkedIn para B2B",
      7: "Azul transmite confian√ßa",
      8: "Cores neutras s√£o seguras",
      9: "Padr√µes geom√©tricos",
      10: "Quadrado √© mais tech",
      11: "3-5 selos para alto valor",
      12: "Limite por seguran√ßa",
      13: "Ex: 'Consultoria gratuita'",
      14: "Ex: 'A cada R$500 um selo'",
      15: "90 dias para projetos"
    },
    moda: {
      1: "Nome deve ser fashion",
      2: "Moda √© estilo pessoal",
      3: "Logo estilosa marca presen√ßa",
      4: "WhatsApp para novidades",
      5: "Endere√ßo da loja f√≠sica",
      6: "Instagram √© fundamental",
      7: "Cores da moda atual",
      8: "Fundos que destacam produtos",
      9: "Texturas de tecidos",
      10: "Estrela √© vers√°til",
      11: "6-10 selos conforme pre√ßo",
      12: "Controla estoque limitado",
      13: "Ex: 'Pe√ßa gr√°tis na cole√ß√£o'",
      14: "Ex: 'A cada R$100 um selo'",
      15: "45 dias para cole√ß√µes"
    },
    saude: {
      1: "Nome profissional √© essencial",
      2: "Sa√∫de exige responsabilidade",
      3: "Logo deve transmitir confian√ßa",
      4: "WhatsApp para emerg√™ncias",
      5: "Endere√ßo para consultas",
      6: "Facebook para informa√ß√µes",
      7: "Verde transmite sa√∫de",
      8: "Cores suaves e calmas",
      9: "Padr√µes que relaxam",
      10: "Cruz √© s√≠mbolo universal",
      11: "4-8 selos para consultas",
      12: "Limite por agenda m√©dica",
      13: "Ex: 'Consulta de retorno gr√°tis'",
      14: "Ex: 'A cada consulta um selo'",
      15: "120 dias para tratamentos"
    }
  };

  const segmentTips = tipsBySegment[segment];
  if (segmentTips && segmentTips[question]) {
    return segmentTips[question];
  }

  // Default tips
  const defaultTips: Record<number, string> = {
    1: "Nome claro √© fundamental",
    2: "Escolha seu segmento",
    3: "Logo marca sua identidade",
    4: "Contato facilita relacionamento", 
    5: "Endere√ßo gera confian√ßa",
    6: "Redes sociais conectam",
    7: "Cor representa sua marca",
    8: "Fundo destaca conte√∫do",
    9: "Textura d√° personalidade",
    10: "Forma representa voc√™",
    11: "Quantidade ideal de selos",
    12: "Controle de distribui√ß√£o",
    13: "Recompensa atrativa",
    14: "Regras claras s√£o essenciais",
    15: "Prazo cria urg√™ncia"
  };

  return defaultTips[question] || "Vamos criar algo incr√≠vel!";
};

export const FidelixTip = ({ questionNumber }: FidelixTipProps) => {
  const { state } = useWizard();
  const tip = getTipBySegmentAndQuestion(state.businessData.segment || '', questionNumber);

  return (
    <div className="text-xs text-muted-foreground bg-muted/30 rounded-full flex items-center gap-2 px-3 py-1">
      <span className="text-primary">üê±</span>
      <span>{tip}</span>
    </div>
  );
};